{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"USP Core WAAP","text":"<p>USP Core WAAP (Web Application and API Protection) provides secure access to web-based applications and resources, while simplifying the process of configuration and deployment.</p> <ul> <li>Current operator release version: 0.7.0</li> <li>Current operator Helm charts version: 0.7.4</li> </ul>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#070-2024-04-29","title":"0.7.0 - 2024-04-29","text":""},{"location":"CHANGELOG/#contents","title":"Contents","text":"<ul> <li>Core WAAP 1.1.5 (Envoy 1.30.1)</li> <li>Spec library 0.6.0 (Envoy config 1.30.1 CRS 4.0.0-RC2)</li> <li>Helm Charts 0.7.4</li> </ul>"},{"location":"CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Breaking: Default upstream protocol HTTP/2 (previously HTTP/1.1) (#285763)</li> </ul>"},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Add \"serviceAnnotations\" config setting and corresponding \"service-annotations\" annotation (#285763)</li> <li>Add origin IP allow/deny (#286876)</li> <li>Add allowed HTTP methods per route (#256147)</li> <li>Add autoHostRewrite configurable (if true set X-Forwarded-Host header) (#287831 #288623)</li> <li>Add downstream automatic preference of HTTP/2; upstream HTTP/2 (default) HTTP/1.1 or automatic selection via ALPN (requires TLS) (#285763)</li> <li>Add features to CRS autolearn CLI (#288611)</li> </ul>"},{"location":"CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>At JWT-only authentication forward JWT upstream if configured (#288135)</li> <li>Add missing CRS rules (#288611)</li> </ul>"},{"location":"CHANGELOG/#061-2024-03-28","title":"0.6.1 - 2024-03-28","text":""},{"location":"CHANGELOG/#contents_1","title":"Contents","text":"<ul> <li>Core WAAP 1.1.2</li> <li>Spec library 0.5.0 (Envoy config 1.29.x)</li> </ul>"},{"location":"CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Missing version suffix (e.g. \":1.1.2\") in the \"envoy.image\" configuration setting could lead to an invalid version   label in the generated ConfigMap object leading to a failed deployment. Now the version will fall back to \"latest\"   if no version is specified for the image.</li> </ul>"},{"location":"CHANGELOG/#060-2024-03-25","title":"0.6.0 - 2024-03-25","text":""},{"location":"CHANGELOG/#contents_2","title":"Contents","text":"<ul> <li>Core WAAP 1.1.2</li> <li>Spec library 0.5.0 (Envoy config 1.29.x)</li> </ul>"},{"location":"CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>Breaking: Use plural for lists in WAAP Spec (authentications audiences) (#285960)</li> <li>Breaking: Default for \"replicas\" is no longer 1 but to not set it so that an HPA (Horizontal Pod Autoscaler) can manage it (#282428)</li> <li>Breaking: The name in the operator CR (custom resource) is ignored as well as the corresponding annotation instead uses the metadata name of the resource \"CoreWaapService\" (the Core WAAP CR) as name for Pods Service ReplicaSets etc. (#284588)</li> <li>Breaking: Replace authentication tokenEndpointAuthType QUERY with BODY (#285777)</li> <li>Improve validation of WAAP Spec and more info in generated CRD (#282608)</li> </ul>"},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Add header match for routes (#285016)</li> <li>Add authentication useRefreshToken flag (#285777)</li> <li>Allow plain http jwksEndpoint in JWT-auth-only use case (#285962)</li> </ul>"},{"location":"CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Support multiple instances in same namespace (#284588)</li> </ul>"},{"location":"CHANGELOG/#050-2024-03-05","title":"0.5.0 - 2024-03-05","text":""},{"location":"CHANGELOG/#contents_3","title":"Contents","text":"<ul> <li>Core WAAP 1.1.0</li> <li>Spec library 0.4.0 (Envoy config 1.29.x)</li> </ul>"},{"location":"CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Breaking: If <code>caCertificatesConfigMapName</code> is set also <code>caCertificateKeyInConfigMap</code> must be set (or corresponding annotations) (#282762)</li> </ul>"},{"location":"CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Set service account name and whether to automount token (#282286)</li> </ul>"},{"location":"CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>Mounted CA certificates always under <code>/etc/ssl/certs/ca-certificates.crt</code> (#282762)</li> </ul>"},{"location":"CHANGELOG/#041-2024-02-27","title":"0.4.1 - 2024-02-27","text":""},{"location":"CHANGELOG/#contents_4","title":"Contents","text":"<ul> <li>Core WAAP 1.1.0</li> <li>Spec library 0.3.0 (Envoy config 1.29.x)</li> </ul>"},{"location":"CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li>Fixed build problem.</li> </ul>"},{"location":"CHANGELOG/#040-2024-02-26","title":"0.4.0 - 2024-02-26","text":""},{"location":"CHANGELOG/#contents_5","title":"Contents","text":"<ul> <li>Core WAAP 1.1.0</li> <li>Spec library 0.2.2</li> </ul>"},{"location":"CHANGELOG/#added_3","title":"Added","text":"<ul> <li>TLS support for upstream backends.</li> </ul>"},{"location":"CHANGELOG/#030-2024-02-23","title":"0.3.0 - 2024-02-23","text":""},{"location":"CHANGELOG/#contents_6","title":"Contents","text":"<ul> <li>Core WAAP 1.1.0</li> <li>Spec library 0.2.</li> </ul>"},{"location":"CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>Breaking: The \"podName\" operator setting has been renamed to just \"name\". The custom annotation to override    this setting has been adapted accordingly from \"core.waap.u-s-p.ch/pod-name\" to \"core.waap.u-s-p.ch/name\".</li> </ul>"},{"location":"CHANGELOG/#added_4","title":"Added","text":"<ul> <li>New operator setting \"envoy/labels\" (or annotation \"core.waap.u-s-p.ch/labels\") allows to define one or multiple   custom labels for the Envoy pods.</li> </ul>"},{"location":"CHANGELOG/#fixed_5","title":"Fixed","text":"<ul> <li>The \"name\" operator configuration setting (formerly \"podName\") is now also properly used for the name of the \"Service\"   and the \"ConfigMap\" objects of the Core WAAP deployment. This allows to have multiple Core WAAP deployments within the same   application namespace. </li> </ul>"},{"location":"CHANGELOG/#020-2024-02-12","title":"0.2.0 - 2024-02-12","text":""},{"location":"CHANGELOG/#contents_7","title":"Contents","text":"<ul> <li>Core WAAP 1.1.0</li> <li>Spec library 0.2.0</li> </ul>"},{"location":"CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>Breaking: Renamed everything to \"core-waap-operator\".  </li> </ul>"},{"location":"CHANGELOG/#011-2024-01-25","title":"0.1.1 - 2024-01-25","text":""},{"location":"CHANGELOG/#contents_8","title":"Contents","text":"<ul> <li>Core WAAP 1.0.6</li> <li>Spec library 0.0.8</li> </ul>"},{"location":"CHANGELOG/#added_5","title":"Added","text":"<ul> <li>Added Envoy configuration for custom CA certificates. </li> </ul>"},{"location":"CHANGELOG/#010-2024-01-18","title":"0.1.0 - 2024-01-18","text":""},{"location":"CHANGELOG/#contents_9","title":"Contents","text":"<ul> <li>Core WAAP 1.0.6</li> <li>Spec library 0.0.7</li> </ul>"},{"location":"CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Added configuration option and annotation for custom CA truststore.</li> </ul>"},{"location":"CHANGELOG/#009-2024-01-11","title":"0.0.9 - 2024-01-11","text":""},{"location":"CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Updated CRD (obsolete status fields replaced with single message).</li> </ul>"},{"location":"CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Added configuration option and annotation for number of replicas.</li> <li>Added support for mounting secrets for OIDC authentication.</li> </ul>"},{"location":"CHANGELOG/#008-2024-01-03","title":"0.0.8 - 2024-01-03","text":""},{"location":"CHANGELOG/#fixed_6","title":"Fixed","text":"<ul> <li>Fixed invalid resource format handling</li> </ul>"},{"location":"CHANGELOG/#007-2024-12-19","title":"0.0.7 - 2024-12-19","text":""},{"location":"CHANGELOG/#fixed_7","title":"Fixed","text":"<ul> <li>Fixed invalid CR annotation name for image override</li> </ul>"},{"location":"CHANGELOG/#006-2024-12-16","title":"0.0.6 - 2024-12-16","text":""},{"location":"CHANGELOG/#fixed_8","title":"Fixed","text":"<ul> <li>Fixed copy-paste error with \"limits\" resources.</li> </ul>"},{"location":"CHANGELOG/#005","title":"0.0.5","text":""},{"location":"CHANGELOG/#added_8","title":"Added","text":"<ul> <li>Operator config map template with resources</li> <li>Operator config support for envoy resources (cpu memory)</li> <li>Operator config support for envoy pod name</li> <li>Envoy log format supports auto-learning CLI tool.</li> </ul>"},{"location":"CHANGELOG/#004","title":"0.0.4","text":"<ul> <li>Internal testing release.</li> </ul>"},{"location":"CHANGELOG/#003","title":"0.0.3","text":"<ul> <li>First usable native build.</li> <li>Uses Envoy 1.29 (no hot reload for normal config changes)</li> </ul>"},{"location":"CHANGELOG/#002","title":"0.0.2","text":"<ul> <li>Minor extensions.</li> </ul>"},{"location":"CHANGELOG/#001","title":"0.0.1","text":"<ul> <li>Experimental release for Envoy 1.28.</li> </ul>"},{"location":"autolearning/","title":"Auto-Learning","text":"<p>USP Core WAAP provides a command-line tool that allows to apply an automated learning mechanism to generate a set of rules for Coraza (ModSecurity/CRS).</p> <p>The tool itself is an executable Java archive (jar) and can be downloaded here.</p> <p>Run with <code>java -jar waap-lib-autolearn-cli-0.6.0.jar --help</code> to see usage:</p> <pre><code>Usage: java -jar waap-lib-autolearn-cli-&lt;version&gt;.jar [-hsV] [--ignorequery]\n       [--reduceconfigured] [--skipmetadataexport] [--skippostparts]\n       [--sortexceptions] [-e=&lt;error&gt;] [-i=&lt;specIn&gt;] [-l=&lt;log&gt;]\n       [-n=&lt;namespace&gt;] [-o=&lt;specOut&gt;] [-t=&lt;range&gt;] [-w=&lt;instance&gt;]\nAutolearns CRS rule exceptions from USP Core WAAP log files.\nCopyright (c) United Security Providers AG, Switzerland, All rights reserved.\n  -e, --errorfile=&lt;error&gt;    File to write errors to, optional, by default no\n                               file is written.\n  -h, --help                 Show this help message and exit.\n  -i, --waapspecin=&lt;specIn&gt;  USP Core WAAP spec file (or manifest file) to\n                               read, use '-' for stdin, exclusive with -n/-w.\n      --ignorequery          Ignore query parameters when adding location to\n                               the exception\n  -l, --log=&lt;log&gt;            USP Core WAAP log file to parse, exclusive with\n                               -n/-w.\n  -n, --namespace=&lt;namespace&gt;\n                             Kubernetes namespace with USP Core WAAP, exclusive\n                               with -i/-l.\n  -o, --waapspecout=&lt;specOut&gt;\n                             USP Core WAAP spec file (or manifest file) to\n                               write, defaults to 'waap.yaml', use '-' for\n                               stdout (then automatically also -s).\n      --reduceconfigured     Changes already configured exceptions by removing\n                               a) duplicates &amp; b) more specific rules in favor\n                               of more general ones\n  -s, --silent               No output to stdout with number of learned rules\n                               and errors.\n      --skipmetadataexport   Skip metadata export.\n      --skippostparts        Skip part name parsing for ARGS_POST.\n      --sortexceptions       Sort rule exceptions in the output.\n  -t, --timerange=&lt;range&gt;    Optional time range to learn from, e.g.\n                               \"20231201.1010-20231202.1010\" (time with\n                               minutes).\n  -V, --version              Print version information and exit.\n  -w, --waapinstance=&lt;instance&gt;\n                             Kubernetes USP Core WAAP instance name (app.\n                               kubernetes.io/instance), exclusive with -i/-l.\n</code></pre>"},{"location":"documentation/","title":"Documentation","text":"<p>TBD</p>"},{"location":"downloads/","title":"Downloads","text":""},{"location":"downloads/#demo-apps","title":"Demo Apps","text":"<ul> <li>Juiceshop: juiceshop.zip</li> <li>Httpbin: httpbin.zip</li> </ul>"},{"location":"downloads/#auto-learning-tool","title":"Auto-Learning Tool","text":"<ul> <li>Executable Jar: waap-lib-autolearn-cli-0.6.0.jar</li> </ul>"},{"location":"helm/","title":"Helm Charts","text":"<p>Install the operator via Helm using the Helm charts. The Helm charts are available on the USP OCI repository:</p> <ul> <li><code>oci://uspregistry.azurecr.io/helm/usp/core/waap/usp-core-waap-operator</code></li> </ul>"},{"location":"helm/#download-pull","title":"Download (pull)","text":"<p>To just download the Helm charts (latest release):</p> <pre><code>$ helm pull oci://uspregistry.azurecr.io/helm/usp/core/waap/usp-core-waap-operator\n</code></pre>"},{"location":"helm/#install-operator","title":"Install operator","text":"<p>To install the latest operator release:</p> <pre><code>$ helm install usp-core-waap-operator oci://uspregistry.azurecr.io/helm/usp/core/waap/usp-core-waap-operator --version 0.7.4\n</code></pre> <p>To override the operator configuration settings in the <code>operator-configuration.yaml</code> Helm template, use a local values file, e.g. <code>custom-values.yaml</code> with the <code>-f</code> Helm CLI argument:</p> <pre><code>$ helm install -f custom-values.yaml usp-core-waap-operator oci://uspregistry.azurecr.io/helm/usp/core/waap/usp-core-waap-operator --version 0.7.4\n</code></pre>"},{"location":"helm/#information","title":"Information","text":"<p>You can use <code>helm template</code> to just render the templates to the console in order to look at the contents, before  actually installing the operator:</p> <pre><code>$ helm template -f custom-values.yaml usp-core-waap-operator oci://uspregistry.azurecr.io/helm/usp/core/waap/usp-core-waap-operator --version 0.7.4\n</code></pre>"},{"location":"operator/","title":"Operator Configuration","text":"<p>The operator configuration template contains many settings for the operator itself, and/or the WAAP Envoy deployments. The template bundled in the Helm charts contains default settings from the bundled <code>values.yaml</code> file, which will  usually have to be overridden for any custom deployments. To override the values, a local values YAML file can be used.</p>"},{"location":"values/","title":"usp-core-waap-operator","text":"<p>Helm chart for the USP Core WAAP operator.</p>"},{"location":"values/#values","title":"Values","text":"Key Type Default Description envoy.geoIpProvider.ipinfo.token string <code>\"\"</code> Optional: Token string for ipinfo.io DB download envoy.geoIpProvider.maxmind.accountId string <code>\"\"</code> Optional: MaxMind account ID for DB download envoy.geoIpProvider.maxmind.licenseKey string <code>\"\"</code> Optional: MaxMind license key for DB download envoy.geoIpProvider.maxmind.useLite bool <code>true</code> Optional: Set to false to disable using the free MaxMind databases. envoy.image string <code>\"quay.io/usp/usp-core-waap:1.1.5\"</code> image: The Envoy container image to use envoy.labels string <code>\"\"</code> Optional: Additional label(s) for Envoy pods Must be comma- or blank-separated key/value pairs. Example: <code>\"creator=usp logformat=json\"</code> envoy.listenerPort int <code>8080</code> Optional: Envoy proxy listener port (usually only needed if a custom image is used where envoy does not listen on 8080) envoy.replicas int <code>1</code> Optional: Number of pod replicas If not set, the field is not seen as \"managed by the operator\", meaning the operator won't undo any changes to this field done by the HPA (Horizontal Pod Autoscaler). envoy.resources.limits.cpu string <code>\"1500m\"</code> CPU resource limit per request envoy.resources.limits.memory string <code>\"500Mi\"</code> Memory resource limit per request envoy.resources.request.cpu string <code>\"1000m\"</code> CPU resources required per request envoy.resources.request.memory string <code>\"300Mi\"</code> Memory resources required per request envoy.servicePort int <code>8080</code> Optional: Listener port of k8s service created by the operator for the envoy proxy operator.caCertKeyInConfigMap string <code>\"\"</code> Mandatory if caCertificatesConfigMapName is set: name of key in ConfigMap which holds the CA truststore. The entry with that key name will be mapped to the \"ca-certificates.crt\" file. operator.caCertsConfigMapName string <code>\"\"</code> Optional: name of ConfigMap which holds the CA truststore to be used by default (globally) in the pod. operator.image string <code>\"quay.io/usp/usp-core-waap-operator\"</code> Operator container image operator.ingressMode bool <code>false</code> Optional: If set to true, envoy will be deployed as an ingress proxy in the operators own namespace operator.namespace string <code>\"usp-core-waap-operator\"</code> Operator deployment namespace operator.serviceAccount string <code>\"usp-core-waap-operator\"</code> Name of service account operator.version string <code>\"0.7.0\"</code> Version of operator to deploy operator.watchedNamespaces string <code>\"\"</code> Optional: list of namespaces for which to process custom resources or ingress manifests (defaults to all). <p>Autogenerated from chart metadata using helm-docs v1.13.1</p>"}]}